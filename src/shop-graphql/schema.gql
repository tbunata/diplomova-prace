# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Category {
  description: String!
  id: Float!
  name: String!
}

type Mutation {
  addCategory(newCategoryData: NewCategoryInput!): Category!
  addProduct(newProductData: NewProductInput!): Product!
  addUser(newUserData: NewUserInput!): User!
  loginUser(email: String!, password: String!): UserTokens!
  refreshToken(email: String!, token: String!): RefreshedToken!
  removeCategory(id: Float!): Boolean!
  removeProduct(id: Float!): Boolean!
  removeUser(id: Float!): Boolean!
  updateCategory(id: Float!, updateCategoryData: UpdateCategoryInput!): Category
  updateProduct(id: Float!, updateProductData: UpdateProductInput!): Product!
  updateUser(id: Float!, updateUserData: UpdateUserInput!): User
}

input NewCategoryInput {
  description: String!
  name: String!
}

input NewProductInput {
  brandId: Float!
  categoryIds: [Int!]!
  description: String!
  name: String!
  price: Float!
  quantity: Float!
  statusId: Float!
}

input NewUserInput {
  address: String
  city: String
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  phone: String
  zipCode: String
}

type Product {
  brandId: Float!
  categories: [ProductCategory!]!
  description: String!
  id: Float!
  name: String!
  price: Float!
  quantity: Float!
  status: ProductStatus!
}

type ProductCategory {
  id: Float
  name: String
}

type ProductStatus {
  id: Float!
  name: String!
}

type Query {
  allCategories: [Category!]!
  allProducts: [Product!]!
  allUsers: [User!]!
  getCategory(id: Float!): Category
  getProduct(id: Float!): Product!
  getUser(id: Float!): User
}

type RefreshedToken {
  token: String!
}

input UpdateCategoryInput {
  description: String
  name: String
}

input UpdateProductInput {
  brandId: Float
  categoryIds: [Int!]
  description: String
  name: String
  price: Float
  quantity: Float
  statusId: Float
}

input UpdateUserInput {
  address: String
  city: String
  email: String
  firstName: String
  lastName: String
  password: String
  phone: String
  statusId: Float
  zipCode: String
}

type User {
  address: String
  city: String
  email: String!
  firstName: String!
  id: Float!
  lastName: String!
  phone: String
  status: UserStatus!
  zipCode: String
}

type UserStatus {
  id: Float!
  name: String!
}

type UserTokens {
  refreshToken: String!
  token: String!
}
